{"version":3,"sources":["factories/gameboardFactory.js","helpers/ships.js","factories/playerFactory.js","components/EnemyGameboard.js","components/PlayerGameboard.js","App.js","GameOver.js","Routes.js","index.js"],"names":["Gameboard","this","board","i","push","hasShip","ship","isShot","shipArray","length","location","orientation","locationArray","some","cell","every","edge","includes","filter","ships","Player","name","gameBoard","randCoord","randOrient","randOrientNum","Math","floor","random","avialableSpaces","forEach","index","checkPlacement","placeShip","receiveAttack","availableShots","EnemyGameboard","props","player","handleClick","className","map","type","onClick","bind","shot","toString","shotShip","PlayerGameboard","App","handleWin","useState","enemy","key","updateKey","enemySunk","allSunk","playerSunk","history","useHistory","routeChange","target","checkAttack","randomShot","receiveRandomAttack","GameOver","winner","Routes","updateWinner","e","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09d9ebd3.chunk.js","sourcesContent":["class Gameboard {\r\n    constructor(){\r\n        this.board = []\r\n        for (let i = 0; i < 64; i++){\r\n            this.board.push({hasShip: false, ship: {}, isShot: false})\r\n        }\r\n    }\r\n    placeShip(ship, shipArray){\r\n        for (let i = 0; i < shipArray.length; i++){\r\n            this.board[shipArray[i]].hasShip = true\r\n            this.board[shipArray[i]].ship = ship\r\n        }\r\n    }\r\n\r\n\tshipArray(ship, location, orientation) {\r\n\t\tlet locationArray = [];\r\n\t\tfor (let i = 0; i < ship.length; i++) {\r\n            if (orientation === \"horizontal\"){\r\n                locationArray.push(location + i)\r\n            }\r\n\t\t\tif (orientation === \"vertical\"){\r\n                locationArray.push(location + i * 8)\r\n            }\r\n\t\t}\r\n\t\treturn locationArray;\r\n\t}\r\n\r\n    checkPlacement(shipArray){\r\n        const collisionCells = [7, 15, 23, 31, 39, 47, 55, 63]\r\n        if (collisionCells.some((cell) => \r\n            {return [cell, cell + 1].every((edge) => \r\n                shipArray.includes(edge)\r\n            )}\r\n        )){\r\n            return false\r\n        } else if (shipArray.some(cell => !this.board[cell])) {\r\n            return false\r\n        } else if (shipArray.some(cell => this.board[cell].hasShip)){\r\n            return false\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    receiveAttack(location){\r\n        if (this.board[location].isShot === false){\r\n            this.board[location].isShot = true\r\n        } else return false\r\n    }\r\n\r\n    checkAttack(location){\r\n        if (this.board[location].isShot === false){\r\n            return true\r\n        } else return false\r\n    }\r\n\r\n    didShotHit(location){\r\n        return this.board[location].hasShip\r\n    }\r\n\r\n    allSunk(){\r\n        const ships = this.board.filter(cell => cell.hasShip)\r\n        if (ships.every(cell => cell.isShot)){\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n}\r\nexport default Gameboard","const ships = [\r\n    {\r\n        \"name\" : \"carrier\",\r\n        \"length\" : 5,\r\n    },\r\n    {\r\n        \"name\" : \"battleship\",\r\n        \"length\" : 4,\r\n    },\r\n    {\r\n        \"name\" : \"destroyer\",\r\n        \"length\" : 3,\r\n    },\r\n    {\r\n        \"name\" : \"submarine\",\r\n        \"length\" : 3,\r\n    },\r\n    {\r\n        \"name\" : \"patrol boat\",\r\n        \"length\" : 2,\r\n    },\r\n]\r\nexport default ships","import Gameboard from './gameboardFactory';\r\nimport ships from '../helpers/ships'\r\n\r\nclass Player {\r\n    constructor(name){\r\n        this.name = name\r\n        this.ships = ships\r\n        this.gameBoard = new Gameboard()\r\n\r\n        for (let i = 0; i < ships.length; i++){\r\n            \r\n            let randCoord\r\n            let randOrient\r\n            let randOrientNum = Math.floor(Math.random() * 2)\r\n\r\n            let avialableSpaces = []\r\n            this.gameBoard.board.forEach((cell, index) => {\r\n                if (cell.hasShip === false){\r\n                    avialableSpaces.push(index)\r\n                }\r\n            })\r\n\r\n            let shipArray = this.gameBoard.shipArray(ships[i], randCoord, randOrient)\r\n            \r\n            do {\r\n                randCoord = Math.floor(Math.random() * avialableSpaces.length)\r\n                randOrient = Math.floor(Math.random() * 2)\r\n                if (randOrientNum === 0){\r\n                    randOrient = \"horizontal\"\r\n                }else{\r\n                    randOrient = \"vertical\"\r\n                }\r\n                shipArray = this.gameBoard.shipArray(ships[i], randCoord, randOrient)\r\n            }\r\n            while (this.gameBoard.checkPlacement(shipArray) === false)\r\n\r\n            this.gameBoard.placeShip(ships[i], shipArray)\r\n          }\r\n    }\r\n\r\n    receiveAttack(location){\r\n        this.gameBoard.receiveAttack(location)\r\n        return this\r\n    }\r\n\r\n    receiveRandomAttack(){\r\n        let availableShots = []\r\n        this.gameBoard.board.forEach((cell, index) => {\r\n            if (cell.isShot === false){\r\n                availableShots.push(index)\r\n            }\r\n        })\r\n        let randCoord = Math.floor(Math.random() * availableShots.length)\r\n        return availableShots[randCoord]\r\n    }\r\n}\r\n// module.exports = Player\r\n\r\nexport default Player","import React from 'react'\r\n\r\nfunction EnemyGameboard(props) {\r\n\r\n  const {\r\n    player,\r\n    handleClick\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <h1>{player.name}'s Waters</h1>\r\n      <div className=\"board\">\r\n        {player.gameBoard.board.map((cell, index) => \r\n          <button\r\n            type=\"submit\"\r\n            className=\"cell\" \r\n            key={Math.random()}\r\n            onClick={handleClick.bind(this, player, index)}\r\n            shot={cell.isShot.toString()}\r\n            shotShip={cell.isShot && cell.hasShip ? \"true\" : \"false\"}\r\n          >\r\n          </button>)}\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default EnemyGameboard;","import React from 'react'\r\n\r\nfunction PlayerGameboard(props) {\r\n\r\n  const {\r\n    player\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <h1>Player's Waters</h1>\r\n      <div className=\"board\">\r\n        {player.gameBoard.board.map((cell, index) => \r\n          <button\r\n            type=\"submit\"\r\n            className=\"cell\" \r\n            key={Math.random()}\r\n            shot={cell.isShot.toString()}\r\n            ship={cell.hasShip.toString()}\r\n            shotShip={cell.isShot && cell.hasShip ? \"true\" : \"false\"}\r\n          >\r\n          </button>)}\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default PlayerGameboard;","import Player from './factories/playerFactory'\nimport EnemyGameboard from './components/EnemyGameboard'\nimport PlayerGameboard from './components/PlayerGameboard'\nimport React, {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nfunction App(props) {\n\n  const {handleWin} = props\n  \n  const [player] = useState(new Player(\"Player\"))\n  const [enemy] = useState(new Player(\"Enemy\"))\n  const [key, updateKey] = useState(0)\n\n  let enemySunk = enemy.gameBoard.allSunk()\n  let playerSunk = player.gameBoard.allSunk()\n\n  const history = useHistory();\n\n  const routeChange = () =>{ \n    let path = `gameover`; \n    history.push(path);\n  }\n\n  if (enemySunk === true){\n    handleWin(\"Player\")\n    routeChange()\n  }\n\n  if (playerSunk === true){\n    handleWin(\"Enemy\")\n    routeChange()\n  }\n\n  function handleClick(target, location){\n    if (target.gameBoard.checkAttack(location) === true){\n      enemy.receiveAttack(location)\n      let randomShot = player.receiveRandomAttack()\n      player.receiveAttack(randomShot)\n      rerender()\n    }\n  }\n\n  function rerender(){\n    updateKey(Math.random())\n  }\n\n  return (\n    \n    <div>\n      <div className=\"title\">Fast Battleship</div>\n      <div className=\"game-board\">\n        \n        <div className=\"player-board\">\n          <PlayerGameboard \n            player={player} \n            key = {key}\n            handleClick={handleClick}/>\n        </div>\n        <div className=\"ai-board\">\n          <EnemyGameboard \n            player={enemy}\n            key = {0}\n            handleClick={handleClick}/>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction GameOver(props) {\r\n\r\n  const {winner} = props\r\n\r\n  const history = useHistory();\r\n\r\n  const routeChange = () =>{ \r\n    let path = `/game`; \r\n    history.push(path);\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div>\r\n\r\n        <div className=\"title\">{winner} wins!</div>\r\n        \r\n        <br/>\r\n\r\n        <span className=\"play-again-container\">\r\n          <button onClick={routeChange} className=\"play-again\">Play Again?</button>\r\n        </span>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default GameOver;","import React, { useState } from \"react\"\r\nimport { HashRouter as BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport App from \"./App\"\r\nimport GameOver from \"./GameOver\"\r\n\r\nconst Routes = () => {\r\n\r\n  const [winner, updateWinner] = useState(\"\")\r\n\r\n  const handleWin = e => {\r\n    updateWinner(e)\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n\r\n        <Route \r\n          path=\"/game\"exact \r\n          component={() => <App winner={winner} handleWin={handleWin}/>}\r\n        />\r\n\r\n        <Route \r\n          path=\"/gameover\"exact \r\n          component={() => <GameOver winner={winner}/>}\r\n        />\r\n\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}